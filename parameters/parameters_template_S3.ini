[General]
# Start and end time in format 'yyyy-mm-ddTHH24:MM:SS:SSSZ'
start=2019-08-30T00:00:00.000Z
end=2019-08-31T00:00:00.000Z
# Input data type (e.g. OLCI or MSI)
sensor=OLCI
# The spatial resolution of the output rasters, in meters. To download ERR (reduced resolution) data use '1000'
resolution=300
# Name of the geometry. Should match a *.wkt file available in the wkt_path of the environment
wkt_name=sui
# Geometry string in format POLYGON(...). If not set here, the geometry will be loaded from the file in the wkt_path of the environment, which matches the wkt_name (recommended option)
wkt=
# A comma-separated list of (main) processors (e.g. IDEPIX,C2RCC,POLYMER,L_FLUO,MPH)
processors=IDEPIX,C2RCC,POLYMER,MPH
# A comma-separated list of adapters to use (e.g. QLRGB,QLSINGLEBAND,DATALAKES,SECCHIDEPTH)
adapters=QLRGB,QLSINGLEBAND,DATALAKES

[C2RCC]
# Specify whether ancillary data shall be obtained from ECMWF (SNAP internal), ERA5 (polymer library), or not at all (DEFAULT)
ancillary_data=ECMWF
# Specify a valid expression for the mask (OLCI example: 'quality_flags.fresh_inland_water and !quality_flags.invalid and !pixel_classif_flags.IDEPIX_CLOUD')
validexpression=quality_flags.fresh_inland_water and !quality_flags.invalid and !pixel_classif_flags.IDEPIX_CLOUD and !pixel_classif_flags.IDEPIX_CLOUD_BUFFER and !pixel_classif_flags.IDEPIX_CLOUD_SHADOW
# Specify a properties file which contains the vicarious calibration parameters
vicar_properties_filename=vicarious.properties
# Specify an alternative Neural Network (a name of a folder under processors/c2rcc/altnn/)
altnn=olci_20171221

[POLYMER]
# Specify the bio-optical model, choosing from PR05 (default, Park-Ruddick), MM01, MM01_FOQ (Morel-Maritorena standard or directional)
water_model=PR05
# Specify a valid expression based on Polymer's Rw output spectra
validexpression=Rw665>0 and Rw681>0 and Rw709>0
# Specify a vicarious calibration version
vicar_version=olci_scv2019

[MPH]
# Specify a valid expression for the mask (OLCI example: 'quality_flags.fresh_inland_water and !quality_flags.invalid')
validexpression=quality_flags.fresh_inland_water and !quality_flags.invalid and !pixel_classif_flags.IDEPIX_CLOUD and !pixel_classif_flags.IDEPIX_CLOUD_BUFFER and !pixel_classif_flags.IDEPIX_CLOUD_SHADOW

[L_FLUO]
# Specify a valid expression for the mask (OLCI example: 'quality_flags.fresh_inland_water and !quality_flags.invalid and !pixel_classif_flags.IDEPIX_CLOUD')
validexpression=quality_flags.fresh_inland_water and !quality_flags.invalid and !pixel_classif_flags.IDEPIX_CLOUD and !pixel_classif_flags.IDEPIX_CLOUD_BUFFER and !pixel_classif_flags.IDEPIX_CLOUD_SHADOW

[QLRGB]
# The band names to be used for rgb quicklook of IDEPIX, followed by the max value for the bands
idepix_rgb=Oa08_radiance,Oa06_radiance,Oa04_radiance,0.16
# The band names to be used for false color quicklook of IDEPIX, followed by the max value for the bands
idepix_fc=Oa17_radiance,Oa06_radiance,Oa03_radiance,0.3

[QLSINGLEBAND]
# The bands names to plot for C2RCC, each followed by the max value for this band (0 for automatic estimate)
c2rcc=conc_chl,0,0,conc_tsm,0,0,iop_bwit,0,0
# The bands names to plot for POLYMER, each followed by the max value for this band (0 for automatic estimate)
polymer=logchl,0,0,Rw665,0,0
# The bands names to plot for MPH, each followed by the max value for this band (0 for automatic estimate)
mph=chl,0,0,immersed_cyanobacteria,1,0
# The bands names to plot for L-FLUO, each followed by the max value for this band (0 for automatic estimate)
l_fluo=L_CHL,0,10,L_FPH,0,0,L_APD,0,0
# The band names to plot for SECCHIDEPTH
secchidepth = Z560,0,10

[DATALAKES]
# Specify which bands of which processor outputs should be used to deliver to Datalakes
idepix_bands=quality_flags,pixel_classif_flags
c2rcc_bands=conc_chl,conc_tsm,kdmin,iop_adg,iop_bwit,iop_bpart
polymer_bands=Rw665
mph_bands=immersed_cyanobacteria

[SECCHIDEPTH]
# Specify from which reflectance product Secchi depth is derived
processor=POLYMER

[FORELULE]
# Specify to which reflectance product the Forel-Ule scale is applied
processor=POLYMER